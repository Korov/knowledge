<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rolemanager.user.mapper.RoleModelMapper">
    <resultMap id="BaseResultMap" type="com.rolemanager.commons.model.users.RoleModel">
        <!--@mbg.generated-->
        <!--@Table table_role-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_code" jdbcType="VARCHAR" property="roleCode"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, parent_id, role_name, role_code
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from table_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from table_role
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.rolemanager.commons.model.users.RoleModel"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into table_role (parent_id, role_name, role_code
        )
        values (#{parentId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.rolemanager.commons.model.users.RoleModel"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into table_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleCode != null">
                role_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                #{roleCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.rolemanager.commons.model.users.RoleModel">
        <!--@mbg.generated-->
        update table_role
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                role_code = #{roleCode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.rolemanager.commons.model.users.RoleModel">
        <!--@mbg.generated-->
        update table_role
        set parent_id = #{parentId,jdbcType=BIGINT},
        role_name = #{roleName,jdbcType=VARCHAR},
        role_code = #{roleCode,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update table_role
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="parent_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.parentId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="role_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.roleName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="role_code = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.roleCode,jdbcType=VARCHAR}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update table_role
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="parent_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.parentId != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.parentId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="role_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.roleName != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.roleName,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="role_code = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.roleCode != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.roleCode,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into table_role
        (parent_id, role_name, role_code)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.parentId,jdbcType=BIGINT}, #{item.roleName,jdbcType=VARCHAR}, #{item.roleCode,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
</mapper>
