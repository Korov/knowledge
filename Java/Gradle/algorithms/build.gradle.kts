/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.1/samples
 */
plugins {
    id("java")
    id("idea")
    id("jacoco")
    id("groovy")
}

group = "org.algorithms"
version = "1.0-SNAPSHOT"

dependencies {
    testImplementation("org.codehaus.groovy:groovy:3.0.9")
    implementation("org.apache.logging.log4j:log4j-api:2.14.1")
    implementation("org.apache.logging.log4j:log4j-core:2.14.1")
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:2.14.1")
    implementation("com.google.guava:guava:31.0.1-jre")
    testImplementation(platform("org.junit:junit-bom:5.8.2"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation(platform("org.spockframework:spock-bom:2.1-M2-groovy-3.0"))
    testImplementation("org.spockframework:spock-core")
    compileOnly("org.projectlombok:lombok:1.18.22")
    annotationProcessor("org.projectlombok:lombok:1.18.22")

    testCompileOnly("org.projectlombok:lombok:1.18.20")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.20")
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://maven.aliyun.com/repository/central")
    }
    maven {
        url = uri("https://maven.aliyun.com/repository/gradle-plugin")
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
    sourceCompatibility = "17"
}

tasks.withType<Test> {
    systemProperty("file.encoding", "UTF-8")
}

tasks.withType<Javadoc> {
    options.encoding = "UTF-8"
}

idea {
    module {
        isDownloadJavadoc = true
        isDownloadSources = true
    }
}

tasks.test {
    useJUnitPlatform()
    finalizedBy(tasks.jacocoTestReport)
}

tasks.jacocoTestReport {
    dependsOn(tasks.test)
}

tasks.register<Copy>("copyJarDemo") {
    copy {
        from("build/libs/algorithms-1.0-SNAPSHOT.jar") {
            rename("algorithms-1.0-SNAPSHOT.jar", "algorithms.jar")
        }
        into("$buildDir/../logs")
    }
}

tasks.build {
    finalizedBy(tasks.getByName("copyJarDemo"))
}